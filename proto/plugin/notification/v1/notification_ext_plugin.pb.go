// Code generated by protoc-gen-go-extension. DO NOT EDIT.

package notificationv1

import (
	api "github.com/openkcm/plugin-sdk/api"
	grpc "google.golang.org/grpc"
)

const (
	Type                = "NotificationService"
	GRPCServiceFullName = "plugin.notification.v1.NotificationService"
)

func NotificationServicePluginServer(server NotificationServiceServer) api.PluginServer {
	return notificationServicePluginServer{NotificationServiceServer: server}
}

type notificationServicePluginServer struct {
	NotificationServiceServer
}

func (s notificationServicePluginServer) Type() string {
	return Type
}

func (s notificationServicePluginServer) GRPCServiceName() string {
	return GRPCServiceFullName
}

func (s notificationServicePluginServer) RegisterServer(server *grpc.Server) any {
	RegisterNotificationServiceServer(server, s.NotificationServiceServer)
	return s.NotificationServiceServer
}

type NotificationServicePluginClient struct {
	NotificationServiceClient
}

func (s NotificationServicePluginClient) Type() string {
	return Type
}

func (c *NotificationServicePluginClient) IsInitialized() bool {
	return c.NotificationServiceClient != nil
}

func (c *NotificationServicePluginClient) GRPCServiceName() string {
	return GRPCServiceFullName
}

func (c *NotificationServicePluginClient) InitClient(conn grpc.ClientConnInterface) any {
	c.NotificationServiceClient = NewNotificationServiceClient(conn)
	return c.NotificationServiceClient
}
